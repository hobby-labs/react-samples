import React, { useRef } from 'react';
import { useDrag, useDrop } from 'react-dnd';
import { ItemTypes } from './ItemTypes';

import { makeStyles, useTheme } from '@material-ui/core/styles';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import Typography from '@material-ui/core/Typography';
import IconButton from '@material-ui/core/IconButton';
import CardMedia from '@material-ui/core/CardMedia';

import SkipPreviousIcon from '@material-ui/icons/SkipPrevious';
import PlayArrowIcon from '@material-ui/icons/PlayArrow';
import SkipNextIcon from '@material-ui/icons/SkipNext';


const useStyles = makeStyles((theme) => ({
  root: {
    display: 'flex',
    margin: theme.spacing(1)
  },
  details: {
    display: 'flex',
    flexDirection: 'column',
    width: '50%'
  },
  content: {
    flex: '1 0 auto',
  },
  cover: {
    width: '50%',
  },
  controls: {
    display: 'flex',
    alignItems: 'center',
    paddingLeft: theme.spacing(1),
    paddingBottom: theme.spacing(1),
  },
  playIcon: {
    height: 38,
    width: 38,
  },
}));

const Card2 = ({ id, text, image, index, moveCard }) => {
  const ref = useRef(null);
  const classes = useStyles();
  const theme = useTheme();

  const [, drop] = useDrop({
    accept: ItemTypes.CARD,
    hover(item, monitor) {
      if(!ref.current) {
        return;
      }

      const dragIndex   = item.index;
      const hoverIndex  = index;

      if(dragIndex === hoverIndex) {
        // ドラッグ先が自分自身の場合は、入れ替えをしない
        return;
      }

      // 矩形を定義する
      const hoverBoundingRect = ref.current?.getBoundingClientRect();

      // 縦の中心を取得する
      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;

      // マウスの位置を定義する
      const clientOffset = monitor.getClientOffset();

      // トップへのピクエル数を取得する
      const hoverClientY = clientOffset.y = hoverBoundingRect.top;

      // マウスがアイテムの高さの半分移動したときのみ動作する。
      // 下方向にドラッグしたら、カーソルが下50% 移動したら動作する。
      // 上方向にドラッグしたら、カーソルが上50% 移動したら動作する。

      // 下方向にドラッグ
      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {
        return;
      }

      // 上方向にドラッグ
      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {
        return;
      }

      // これより下、実際のアクション箇所
      moveCard(dragIndex, hoverIndex);

      // ここにアイテムを移動する。
      item.index = hoverIndex;
    }
  });

  const [{ isDragging }, drag] = useDrag({
    item:    { type: ItemTypes.CARD, id, index },
    collect: (monitor) => ({ isDragging: monitor.isDragging() })
  });

  const opacity = isDragging ? 0 : 1;

  drag(drop(ref));

//  return (
//    <Card ref={ref} className={classes.root}>
//      <div className={classes.details}>
//        <CardContent className={classes.content}>
//          <Typography component="h5" variant="h5">
//            Live From Space
//          </Typography>
//          <Typography variant="subtitle1" color="textSecondary">
//            Mac Miller
//          </Typography>
//        </CardContent>
//        <div className={classes.controls}>
//          <IconButton aria-label="previous">
//            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}
//          </IconButton>
//          <IconButton aria-label="play/pause">
//            <PlayArrowIcon className={classes.playIcon} />
//          </IconButton>
//          <IconButton aria-label="next">
//            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}
//          </IconButton>
//        </div>
//      </div>
//      <CardMedia
//        className={classes.cover}
//        image={"/img/" + image}
//        title="Live from space album cover"
//      />
//    </Card>
//  )

  return (
    <div ref={ref}>
      <Card className={classes.root}>
        <div className={classes.details}>
          <CardContent className={classes.content}>
            <Typography component="h5" variant="h5">
              Live From Space
            </Typography>
            <Typography variant="subtitle1" color="textSecondary">
              Mac Miller
            </Typography>
          </CardContent>
          <div className={classes.controls}>
            <IconButton aria-label="previous">
              {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}
            </IconButton>
            <IconButton aria-label="play/pause">
              <PlayArrowIcon className={classes.playIcon} />
            </IconButton>
            <IconButton aria-label="next">
              {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}
            </IconButton>
          </div>
        </div>
        <CardMedia
          className={classes.cover}
          image={"/img/" + image}
          title="Live from space album cover"
        />
      </Card>
    </div>
  )


}

export default Card2;

